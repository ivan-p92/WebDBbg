Login:
SELECT id FROM users WHERE email='?' AND password =SHA1('?');

Categorieen ophalen:
SELECT * FROM groups;

Te tonen evenemten:
SELECT title, start_date, end_date, id FROM events WHERE public='1' AND end_date >= NOW() ORDER BY start_date ASC LIMIT 10 OFFSET 0;

Nog te keuren evenementen:
SELECT title, id FROM events WHERE aprove_id IS NULL ORDER BY start_date ASC;

Evenemnt wordt gekeurd:
UPDATE events SET aprove_id='?' AND aprove_date=NOW() AND public='?' WHERE id='?';

Evenement wordt aangemaakt:
INSERT INTO events (id, title, description, start_date, end_date, create_id, create_date, location) VALUES (NULL, ?, ?, ?, ?, ?, NOW(), ?);

Registratie:
INSERT INTO users (id, email, password, name) VALUES (NULL, ?, ?, ?);

Details 1 specifiek evenement:
SELECT events.*, users.name FROM events INNER JOIN users ON users.id=events.create_id WHERE events.id='1'; 

Rechten bij gebruker weergeven:
SELECT description FROM permissions JOIN users_permissions ON permissions.id=users_permissions.permission_id WHERE users_permissions.user_id=?;

Gebruikers ophalen en alfabetisch sorteren:
SELECT name, id FROM users ORDER BY name ASC;

Rechten aanpassen:
DELETE * FROM users_permissions WHERE user_id=?;
INSERT into users_permissions (user_id, permission_id) VALUES (?,?), (?,?),(?,?);

Conrole (kan gebruiker actie uitvoeren?):
SELECT count(*) AS aantal FROM users_permissions JOIN permissions ON permission_id=permissions.id WHERE user_id=? AND permissions.permission=?;

Alle unaproved, aproved en declined evenementen ophalen van 1 gebruiker;
SELECT title, id FROM unaproved WHERE create_id=?;
SELECT title, id FROM aproved WHERE create_id=?;
SELECT title, id FROM declined WHERE creatie=?;
